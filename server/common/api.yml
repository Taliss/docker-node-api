openapi: 3.0.1
info:
  title: node-docker-app
  description: Playground for docker and node
  version: 1.0.0
servers:
  - url: /api
tags:
  - name: Users
    description: Simple user endpoints
  - name: Specification
    description: The swagger API specification
paths:
  /users:
    post:
      tags:
        - Users
      description: Create a new user
      requestBody:
        description: this is simple user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
      responses:
        201:
          description: Return the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingUser'
        4XX:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{email}:
    get:
      tags:
        - Users
      parameters:
        - name: email
          in: path
          description: The email of the user to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns the user with the specified email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingUser'
        4XX:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Users
      description: this is updating user info
      parameters:
        - name: email
          in: path
          description: The email of the user to update
          required: true
          schema:
            type: string
      requestBody:
        description: User details to be updated
        content:
          application/json:
            schema:
              $ref: '#components/schemas/UpdateUser'
      responses:
        200:
          description: Returns the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingUser'
        4XX:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
components:
  schemas:
    ExistingUser:
      type: object
      properties:
        id:
          type: string
          example: g31sdGs8
        email:
          type: string
          example: iliyan@best-email.com
        givenName:
          type: string
          example: Iliyan
        familyName:
          type: string
          example: Vlahov
        created:
          type: string
          format: date-time
          example: 2021-10-21T14:32:28Z
    CreateUser:
      required:
        - email
        - givenName
        - familyName
      type: object
      properties:
        email:
          type: string
          example: iliyan@my-email.com
        givenName:
          type: string
          minLength: 2
          maxLength: 30
          example: Iliyan
        familyName:
          type: string
          minLength: 2
          maxLength: 30
          example: Vlahov
    UpdateUser:
      type: object
      minProperties: 1
      maxProperties: 3
      properties:
        email:
          type: string
          example: iliyan@new-email.com
        giveName:
          type: string
          minLength: 2
          maxLength: 30
          example: RenameMyFirstName
        familyName:
          type: string
          minLength: 2
          maxLength: 30
          example: RenameMyLastName
    Error:
      type: object
      additionalProperties: true
